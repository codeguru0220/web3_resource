{"expireTime":9007200907710820000,"key":"gatsby-plugin-mdx-entire-payload-0e4391b7b060380b32d00c08f41173bb-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"C:/Users/user/Desktop/Study_Material/Web 3.0/web3.0-awesome/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":138,"offset":139},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":141},"end":{"line":5,"column":29,"offset":169},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Solidity","position":{"start":{"line":8,"column":3,"offset":175},"end":{"line":8,"column":11,"offset":183},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":173},"end":{"line":8,"column":11,"offset":183},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A smart contract can be written in various programming languages such as Rust, Yul, and JavaScript. One programming language that is recommended and made for the purpose is ","position":{"start":{"line":10,"column":1,"offset":187},"end":{"line":10,"column":174,"offset":360},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"Solidity","position":{"start":{"line":10,"column":176,"offset":362},"end":{"line":10,"column":184,"offset":370},"indent":[]}}],"position":{"start":{"line":10,"column":174,"offset":360},"end":{"line":10,"column":186,"offset":372},"indent":[]}},{"type":"text","value":". It is an object-oriented programming language. It is influenced by C++, Python, and JavaScript.","position":{"start":{"line":10,"column":186,"offset":372},"end":{"line":10,"column":283,"offset":469},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":187},"end":{"line":10,"column":283,"offset":469},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://res.cloudinary.com/practicaldev/image/fetch/s--Rxmub8vz--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5jd65usaioipnkv5xs5a.png","alt":"Solidity Development","position":{"start":{"line":12,"column":1,"offset":473},"end":{"line":12,"column":230,"offset":702},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":473},"end":{"line":12,"column":230,"offset":702},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Hello World in Solidity","position":{"start":{"line":14,"column":3,"offset":708},"end":{"line":14,"column":26,"offset":731},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":706},"end":{"line":14,"column":26,"offset":731},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Let’s do a Hello World in Solidity and have a basic knowledge of the syntax.\nThe extension for a solidity file is ","position":{"start":{"line":16,"column":1,"offset":735},"end":{"line":17,"column":38,"offset":850},"indent":[1]}},{"type":"inlineCode","value":".sol","position":{"start":{"line":17,"column":38,"offset":850},"end":{"line":17,"column":44,"offset":856},"indent":[]}},{"type":"text","value":". At the top of every solidity file, we define the license of the code. It is not mandatory but recommended, without it, the compiler will give you a warning. We comment down the license.","position":{"start":{"line":17,"column":44,"offset":856},"end":{"line":17,"column":231,"offset":1043},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":735},"end":{"line":17,"column":231,"offset":1043},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"If you don’t want to define the license of the code or it is not open-source, you can use ","position":{"start":{"line":19,"column":1,"offset":1047},"end":{"line":19,"column":91,"offset":1137},"indent":[]}},{"type":"inlineCode","value":"UNLICENSED","position":{"start":{"line":19,"column":91,"offset":1137},"end":{"line":19,"column":103,"offset":1149},"indent":[]}},{"type":"text","value":". Otherwise, you can use a variety of licenses for your code such as MIT, Apache-2.0, or GPL-2.0. You can find more on it ","position":{"start":{"line":19,"column":103,"offset":1149},"end":{"line":19,"column":225,"offset":1271},"indent":[]}},{"type":"link","title":null,"url":"https://spdx.dev/ids/#how","children":[{"type":"text","value":"here","position":{"start":{"line":19,"column":226,"offset":1272},"end":{"line":19,"column":230,"offset":1276},"indent":[]}}],"position":{"start":{"line":19,"column":225,"offset":1271},"end":{"line":19,"column":258,"offset":1304},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":19,"column":258,"offset":1304},"end":{"line":19,"column":259,"offset":1305},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":1047},"end":{"line":19,"column":259,"offset":1305},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"// SPDX-License-Identifier: MIT","position":{"start":{"line":21,"column":1,"offset":1309},"end":{"line":23,"column":4,"offset":1350},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"After defining the license of the code, we define the compiler version of the solidity to use. It starts with the keyword ","position":{"start":{"line":25,"column":1,"offset":1354},"end":{"line":25,"column":123,"offset":1476},"indent":[]}},{"type":"inlineCode","value":"pragma","position":{"start":{"line":25,"column":123,"offset":1476},"end":{"line":25,"column":131,"offset":1484},"indent":[]}},{"type":"text","value":". It is used to enable a certain feature of the compiler. After this, we have solidity then the version of the compiler. Currently, the latest version of solidity available is 0.8.13. You can always use the relational operator to define the version.","position":{"start":{"line":25,"column":131,"offset":1484},"end":{"line":25,"column":380,"offset":1733},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":1354},"end":{"line":25,"column":380,"offset":1733},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"pragma solidity >=0.7.0 <0.9.0;","position":{"start":{"line":27,"column":1,"offset":1737},"end":{"line":29,"column":4,"offset":1778},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"After this, we have to define the contract with the keyword ","position":{"start":{"line":31,"column":1,"offset":1782},"end":{"line":31,"column":61,"offset":1842},"indent":[]}},{"type":"inlineCode","value":"contract","position":{"start":{"line":31,"column":61,"offset":1842},"end":{"line":31,"column":71,"offset":1852},"indent":[]}},{"type":"text","value":" followed by the name of the contract. After that, we have curly brackets. Within those, we define the code for the contract.","position":{"start":{"line":31,"column":71,"offset":1852},"end":{"line":31,"column":196,"offset":1977},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":1782},"end":{"line":31,"column":196,"offset":1977},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"contract helloworld{\n  // CODE\n}","position":{"start":{"line":33,"column":1,"offset":1981},"end":{"line":37,"column":4,"offset":2025},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Within the contract, we define the data type for storing the value. As the Hello World! is the string we proceed with the keyword string. There is various data type such as boolean, integers, address, string, etc. After string, we can define the visibility quantifiers. There are four of these, that is, external, internal, public, and private. You can know it better ","position":{"start":{"line":39,"column":1,"offset":2029},"end":{"line":39,"column":369,"offset":2397},"indent":[]}},{"type":"link","title":null,"url":"https://www.tutorialspoint.com/solidity/solidity_contracts.htm","children":[{"type":"text","value":"here","position":{"start":{"line":39,"column":370,"offset":2398},"end":{"line":39,"column":374,"offset":2402},"indent":[]}}],"position":{"start":{"line":39,"column":369,"offset":2397},"end":{"line":39,"column":439,"offset":2467},"indent":[]}},{"type":"text","value":". We are going to use the public.","position":{"start":{"line":39,"column":439,"offset":2467},"end":{"line":39,"column":472,"offset":2500},"indent":[]}}],"position":{"start":{"line":39,"column":1,"offset":2029},"end":{"line":39,"column":472,"offset":2500},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Now define the name of the variable and assign the value to it.","position":{"start":{"line":41,"column":1,"offset":2504},"end":{"line":41,"column":64,"offset":2567},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":2504},"end":{"line":41,"column":64,"offset":2567},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"string public myString = \"Hello World!\";","position":{"start":{"line":43,"column":1,"offset":2571},"end":{"line":45,"column":4,"offset":2621},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"All together, the code will look like this:","position":{"start":{"line":47,"column":1,"offset":2625},"end":{"line":47,"column":44,"offset":2668},"indent":[]}}],"position":{"start":{"line":47,"column":1,"offset":2625},"end":{"line":47,"column":44,"offset":2668},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"// SPDX-License-Identifier: MIT\npragma solidity >=0.7.0 <0.9.0;\ncontract hello{\n    string public myString = \"Hello World!\";\n}","position":{"start":{"line":49,"column":1,"offset":2672},"end":{"line":55,"column":4,"offset":2812},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Learning solidity and mastering it will help you in your career. Solidity for Web3 is like JavaScript for Web Development. In the future, there will be high demand for solidity developers for creating and managing smart contracts.","position":{"start":{"line":57,"column":1,"offset":2816},"end":{"line":57,"column":231,"offset":3046},"indent":[]}}],"position":{"start":{"line":57,"column":1,"offset":2816},"end":{"line":57,"column":231,"offset":3046},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Resouces to learn","position":{"start":{"line":59,"column":3,"offset":3052},"end":{"line":59,"column":20,"offset":3069},"indent":[]}}],"position":{"start":{"line":59,"column":1,"offset":3050},"end":{"line":59,"column":20,"offset":3069},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"📄","position":{"start":{"line":61,"column":3,"offset":3075},"end":{"line":61,"column":5,"offset":3077},"indent":[]}},{"type":"link","title":null,"url":"https://docs.soliditylang.org/en/v0.8.11/","children":[{"type":"text","value":"Official Documentaiton","position":{"start":{"line":61,"column":6,"offset":3078},"end":{"line":61,"column":28,"offset":3100},"indent":[]}}],"position":{"start":{"line":61,"column":5,"offset":3077},"end":{"line":61,"column":72,"offset":3144},"indent":[]}}],"position":{"start":{"line":61,"column":3,"offset":3075},"end":{"line":61,"column":72,"offset":3144},"indent":[]}}],"position":{"start":{"line":61,"column":1,"offset":3073},"end":{"line":61,"column":72,"offset":3144},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"📄","position":{"start":{"line":62,"column":3,"offset":3148},"end":{"line":62,"column":5,"offset":3150},"indent":[]}},{"type":"link","title":null,"url":"https://www.makeuseof.com/what-is-solidity/","children":[{"type":"text","value":"What Is Solidity and How Is It Used to Develop Smart Contracts?","position":{"start":{"line":62,"column":6,"offset":3151},"end":{"line":62,"column":69,"offset":3214},"indent":[]}}],"position":{"start":{"line":62,"column":5,"offset":3150},"end":{"line":62,"column":115,"offset":3260},"indent":[]}}],"position":{"start":{"line":62,"column":3,"offset":3148},"end":{"line":62,"column":115,"offset":3260},"indent":[]}}],"position":{"start":{"line":62,"column":1,"offset":3146},"end":{"line":62,"column":115,"offset":3260},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"▶️","position":{"start":{"line":63,"column":3,"offset":3264},"end":{"line":63,"column":5,"offset":3266},"indent":[]}},{"type":"link","title":null,"url":"https://www.youtube.com/watch?v=ipwxYa-F1uY","children":[{"type":"text","value":"Solidity Tutorial - A Full Course on Ethereum, Blockchain Development, Smart Contracts, and the EVM","position":{"start":{"line":63,"column":6,"offset":3267},"end":{"line":63,"column":105,"offset":3366},"indent":[]}}],"position":{"start":{"line":63,"column":5,"offset":3266},"end":{"line":63,"column":151,"offset":3412},"indent":[]}}],"position":{"start":{"line":63,"column":3,"offset":3264},"end":{"line":63,"column":151,"offset":3412},"indent":[]}}],"position":{"start":{"line":63,"column":1,"offset":3262},"end":{"line":63,"column":151,"offset":3412},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"📄","position":{"start":{"line":64,"column":3,"offset":3416},"end":{"line":64,"column":5,"offset":3418},"indent":[]}},{"type":"link","title":null,"url":"https://cryptozombies.io/","children":[{"type":"text","value":"Cypto Zombie","position":{"start":{"line":64,"column":6,"offset":3419},"end":{"line":64,"column":18,"offset":3431},"indent":[]}}],"position":{"start":{"line":64,"column":5,"offset":3418},"end":{"line":64,"column":46,"offset":3459},"indent":[]}}],"position":{"start":{"line":64,"column":3,"offset":3416},"end":{"line":64,"column":46,"offset":3459},"indent":[]}}],"position":{"start":{"line":64,"column":1,"offset":3414},"end":{"line":64,"column":46,"offset":3459},"indent":[]}}],"position":{"start":{"line":61,"column":1,"offset":3073},"end":{"line":64,"column":46,"offset":3459},"indent":[1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":67,"column":1,"offset":3463},"end":{"line":67,"column":31,"offset":3493},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":67,"column":31,"offset":3493}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"C:/Users/user/Desktop/Study_Material/Web 3.0/web3.0-awesome/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"solidity\"\n    }}>{`Solidity`}</h1>\n    <p>{`A smart contract can be written in various programming languages such as Rust, Yul, and JavaScript. One programming language that is recommended and made for the purpose is `}<strong parentName=\"p\">{`Solidity`}</strong>{`. It is an object-oriented programming language. It is influenced by C++, Python, and JavaScript.`}</p>\n    <p><img alt=\"Solidity Development\" src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Rxmub8vz--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5jd65usaioipnkv5xs5a.png\" /></p>\n    <h1 {...{\n      \"id\": \"hello-world-in-solidity\"\n    }}>{`Hello World in Solidity`}</h1>\n    <p>{`Let’s do a Hello World in Solidity and have a basic knowledge of the syntax.\nThe extension for a solidity file is `}<inlineCode parentName=\"p\">{`.sol`}</inlineCode>{`. At the top of every solidity file, we define the license of the code. It is not mandatory but recommended, without it, the compiler will give you a warning. We comment down the license.`}</p>\n    <p>{`If you don’t want to define the license of the code or it is not open-source, you can use `}<inlineCode parentName=\"p\">{`UNLICENSED`}</inlineCode>{`. Otherwise, you can use a variety of licenses for your code such as MIT, Apache-2.0, or GPL-2.0. You can find more on it `}<a parentName=\"p\" {...{\n        \"href\": \"https://spdx.dev/ids/#how\"\n      }}>{`here`}</a>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`// SPDX-License-Identifier: MIT\n`}</code></pre>\n    <p>{`After defining the license of the code, we define the compiler version of the solidity to use. It starts with the keyword `}<inlineCode parentName=\"p\">{`pragma`}</inlineCode>{`. It is used to enable a certain feature of the compiler. After this, we have solidity then the version of the compiler. Currently, the latest version of solidity available is 0.8.13. You can always use the relational operator to define the version.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`pragma solidity >=0.7.0 <0.9.0;\n`}</code></pre>\n    <p>{`After this, we have to define the contract with the keyword `}<inlineCode parentName=\"p\">{`contract`}</inlineCode>{` followed by the name of the contract. After that, we have curly brackets. Within those, we define the code for the contract.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`contract helloworld{\n  // CODE\n}\n`}</code></pre>\n    <p>{`Within the contract, we define the data type for storing the value. As the Hello World! is the string we proceed with the keyword string. There is various data type such as boolean, integers, address, string, etc. After string, we can define the visibility quantifiers. There are four of these, that is, external, internal, public, and private. You can know it better `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.tutorialspoint.com/solidity/solidity_contracts.htm\"\n      }}>{`here`}</a>{`. We are going to use the public.`}</p>\n    <p>{`Now define the name of the variable and assign the value to it.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`string public myString = \"Hello World!\";\n`}</code></pre>\n    <p>{`All together, the code will look like this:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`// SPDX-License-Identifier: MIT\npragma solidity >=0.7.0 <0.9.0;\ncontract hello{\n    string public myString = \"Hello World!\";\n}\n`}</code></pre>\n    <p>{`Learning solidity and mastering it will help you in your career. Solidity for Web3 is like JavaScript for Web Development. In the future, there will be high demand for solidity developers for creating and managing smart contracts.`}</p>\n    <h1 {...{\n      \"id\": \"resouces-to-learn\"\n    }}>{`Resouces to learn`}</h1>\n    <ul>\n      <li parentName=\"ul\">{`📄`}<a parentName=\"li\" {...{\n          \"href\": \"https://docs.soliditylang.org/en/v0.8.11/\"\n        }}>{`Official Documentaiton`}</a></li>\n      <li parentName=\"ul\">{`📄`}<a parentName=\"li\" {...{\n          \"href\": \"https://www.makeuseof.com/what-is-solidity/\"\n        }}>{`What Is Solidity and How Is It Used to Develop Smart Contracts?`}</a></li>\n      <li parentName=\"ul\">{`▶️`}<a parentName=\"li\" {...{\n          \"href\": \"https://www.youtube.com/watch?v=ipwxYa-F1uY\"\n        }}>{`Solidity Tutorial - A Full Course on Ethereum, Blockchain Development, Smart Contracts, and the EVM`}</a></li>\n      <li parentName=\"ul\">{`📄`}<a parentName=\"li\" {...{\n          \"href\": \"https://cryptozombies.io/\"\n        }}>{`Cypto Zombie`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}